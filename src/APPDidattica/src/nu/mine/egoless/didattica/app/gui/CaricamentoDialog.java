/*
 * CaricamentoDialog.java
 *
 * Created on 17 marzo 2007, 2.29
 */

package nu.mine.egoless.didattica.app.gui;

/**
 *
 * @author  Lorenzo Daniele
 *
 * Dialog contenente una barra di progresso ed una label di stato
 * Utilizzato per indicare all'utente lo stato di avanzamneto di un'operazione
 */
public class CaricamentoDialog extends javax.swing.JDialog {
    
    /** 
     * Creates new form CaricamentoDialog 
     * @param parent il Frame che detiene tale dialog
     * @param modal prer rendere il dialog modale
     */
    public CaricamentoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setModal(modal);
    }
    
    /**
     * setta il valore della progress bar
     */
    public void setProgresso(int n){
        jprg.setValue(n);
    }
    
    /**
     * setta lo stato della progress bar ad indeterminato
     */
    public void setIndeterminato(boolean b){
        if(b){
           jprg.setValue(0);
           jprg.setIndeterminate(true);
        } else {
           jprg.setIndeterminate(false);
           jprg.setValue(0);   
        }
    }    
    
    /**
     * setta il testo della label
     */
    public void setStato(String s){
        jlblStato.setText(s);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jprg = new javax.swing.JProgressBar();
        jlbl1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlblStato = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Caricamento Dati");
        setAlwaysOnTop(true);
        setForeground(java.awt.Color.gray);
        setModal(true);

        jlbl1.setText("Caricamento dei dati iniziali in corso...");

        jLabel1.setText("L'operazione potrebbe richiedere qualche minuto");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nu/mine/egoless/didattica/app/gui/img/Import16.gif")));

        jlblStato.setText("Operazione in corso...");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jprg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                    .add(jlbl1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .add(jlblStato, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jlbl1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jprg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jlblStato)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    /**
     * main di prova
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CaricamentoDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jlbl1;
    private javax.swing.JLabel jlblStato;
    private javax.swing.JProgressBar jprg;
    // End of variables declaration//GEN-END:variables
    
}
