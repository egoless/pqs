/*
 * DataPanel.java
 *
 * Created on 7 marzo 2007, 2.04
 */

package nu.mine.egoless.didattica.app.gui.componentiComuni;


import java.util.Date;
import java.beans.PropertyChangeSupport;
import java.beans.PropertyChangeListener;

/**
 *
 * @author  Lorenzo Daniele
 * @author  Alberto Meneghello
 *
 * Pannello per gestire visivamente l'immissione di una data tramite 3 combo box
 *
 */
public class DataPanel extends javax.swing.JPanel {
   
   
   /** 
    * Creates new form DataPanel 
    */
   public DataPanel () {
      initComponents ();
      jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1,31 ) ));
      jcmbMese.setModel(new javax.swing.DefaultComboBoxModel( MESI ));
      jcmbAnno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1900,2007 ) ));
      //dataBean = new Date( ( Integer.decode((String)jcmbAnno.getSelectedItem()) ).intValue() - 1900, jcmbMese.getSelectedIndex(), 
      //         ( Integer.decode((String)jcmbGiorno.getSelectedItem()) ).intValue() );
   }
   
   /** 
    * Creates new form DataPanel 
    * @param data la data a cui inizializzare i combo box
    */   
   public DataPanel(Date data){
       this();
       setData(data);
   }
   
   /**
    * ritrona la data correntemente selezionata
    */
   public Date getDataSelezionata(){
      //return dataBean;
      //return new Date( dataBean.getYear(), dataBean.getMonth(), dataBean.getDate() );
      return new Date( Integer.decode(((String) jcmbAnno.getSelectedItem()))-1900, jcmbMese.getSelectedIndex(), jcmbGiorno.getSelectedIndex()+1 );
   }
   
   /**
    * permette di settare la data che viene mostrara
    */
   public void setData(Date data){
       //dataBean = new Date( data.getYear(), data.getMonth(), data.getDate() ); 
       if( /*data.getYear() != ( (Integer.decode( (String) jcmbAnno.getSelectedItem())) - 1900 ) && 
               data.getMonth() != jcmbMese.getSelectedIndex() &&
               data.getDate()!= jcmbGiorno.getSelectedIndex()+1 */
           ! getDataSelezionata().equals(data)    )  {
           //System.out.println("NO");
           int index = data.getDate()-1;
           if(index<=0) index = 0;
           jcmbGiorno.setSelectedIndex ( index );
           jcmbMese.setSelectedIndex ( data.getMonth() );
           jcmbAnno.setSelectedItem ( Integer.toString ( data.getYear()+1900) );
       }
       //else System.out.println("SIEVVAI");
   }
   
   /**
    * rende agibili o inagibili le componenti
    */
   public void setEnabled(boolean b){
       jcmbAnno.setEnabled(b);
       jcmbMese.setEnabled(b);
       jcmbGiorno.setEnabled(b);
   }

    /**
    * Aggiunge un propertyChangeListener alla lista dei listener
    * @param l Il listener da aggiungere.
    * @param nomeProprieta proprieta' da ascoltare
    */
   public void addPropertyChangeListener(PropertyChangeListener l) {
      propertyChangeSupport.addPropertyChangeListener(DATA_CAMBIATA,l);
   }   
   
   /**
    * Rimuove un propertyChangeListener alla lista dei listener
    * @param l Il listener da rimuovere.
    */
   public void removePropertyChangeListener(PropertyChangeListener l) {
      propertyChangeSupport.removePropertyChangeListener(DATA_CAMBIATA,l);
   }      
   
   /**
    * metodo d'ausilio che ritorna un array di interi crescenti e 
    * consecutivi dal valore da al valore a
    */
   private String[] costruisciLista (int da, int a) {
      String[] lista = new String[a-da+1];
      for(Integer i=da; i<=a; i++)
         lista[i-da] = i.toString ();
      return lista;
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jcmbGiorno = new javax.swing.JComboBox();
        jcmbMese = new javax.swing.JComboBox();
        jcmbAnno = new javax.swing.JComboBox();

        setOpaque(false);
        jcmbGiorno.setMaximumSize(new java.awt.Dimension(35, 22));
        jcmbGiorno.setPreferredSize(new java.awt.Dimension(35, 22));
        jcmbGiorno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbGiornoItemStateChanged(evt);
            }
        });

        jcmbMese.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre" }));
        jcmbMese.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbMeseItemStateChanged(evt);
            }
        });

        jcmbAnno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbAnnoItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jcmbGiorno, 0, 53, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jcmbMese, 0, 105, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jcmbAnno, 0, 63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jcmbAnno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jcmbMese, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jcmbGiorno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcmbAnnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbAnnoItemStateChanged
      System.out.println("MAPDate "); //DEBUG CODE
      int mese = jcmbMese.getSelectedIndex ();
      int anno = new Integer((String)(jcmbAnno.getSelectedItem () ));
      int g = jcmbGiorno.getSelectedIndex();
      //System.out.println("GIORNO:"+g);
      //dataBean.setYear( ( Integer.decode((String)jcmbAnno.getSelectedItem()) ).intValue() - 1900 );  
      if(mese==2-1){
          if(anno%4==0 && anno%100!=0){ // Controlla se l'anno e' bisestile           
             jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1, 29 ) ));
             if(g<=29-1){jcmbGiorno.setSelectedIndex(g);}        
             else {jcmbGiorno.setSelectedIndex(29-1);}
          }
          else{
             jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1, 28 ) ));
             if(g<=28-1) {jcmbGiorno.setSelectedIndex(g);}
             else {jcmbGiorno.setSelectedIndex(28-1);}
          }
      }      
      propertyChangeSupport.firePropertyChange (DATA_CAMBIATA, new Date(), new Date( Integer.decode((String)jcmbAnno.getSelectedItem())+1900 , jcmbMese.getSelectedIndex()+1, jcmbGiorno.getSelectedIndex()+1)); 
    }//GEN-LAST:event_jcmbAnnoItemStateChanged

    private void jcmbMeseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbMeseItemStateChanged
      System.out.println("AAPDate "); //DEBUG CODE      
      int m = jcmbMese.getSelectedIndex();
      //dataBean.setMonth(m);
      int g = jcmbGiorno.getSelectedIndex();
      int a = new Integer((String)(jcmbAnno.getSelectedItem ()));
      if(m==9-1 || m==4-1 || m==6-1 || m==11-1){
          jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1,30 ) ));
          if(g<=30-1) jcmbGiorno.setSelectedIndex(g);
          else jcmbGiorno.setSelectedIndex(30-1);
      } 
      else{
         if(m==2-1){
            if(a%4==0 && a%100!=0){
               jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1,29 ) ));
               if(g<=28-1) jcmbGiorno.setSelectedIndex(g);
               else jcmbGiorno.setSelectedIndex(29-1);
            }
            else{
               jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1,28 ) ));
               if(g<=29-1) jcmbGiorno.setSelectedIndex(g);
               else jcmbGiorno.setSelectedIndex(28-1);
            }
         }
         else{
            jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1,31 ) ));
            jcmbGiorno.setSelectedIndex(g);
         }    
      }
      propertyChangeSupport.firePropertyChange (DATA_CAMBIATA, new Date(), new Date( Integer.decode((String)jcmbAnno.getSelectedItem())+1900 , jcmbMese.getSelectedIndex()+1, jcmbGiorno.getSelectedIndex()+1));      
    }//GEN-LAST:event_jcmbMeseItemStateChanged

   private void jcmbGiornoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbGiornoItemStateChanged
      propertyChangeSupport.firePropertyChange (DATA_CAMBIATA, new Date(), new Date( Integer.decode((String)jcmbAnno.getSelectedItem())+1900 , jcmbMese.getSelectedIndex()+1, jcmbGiorno.getSelectedIndex()+1));
   }//GEN-LAST:event_jcmbGiornoItemStateChanged
    
    /**
     * metodi richiamati dai listener agganciati alle varie componenti del pannello
     */          
      
   
   
   // Questo non conta i giorni bisestili
   /*
   private void jcmbMeseActionPerformed (java.awt.event.ActionEvent evt) {                                         
      int mese = jcmbMese.getSelectedIndex ();
      jcmbGiorno.setModel (new javax.swing.DefaultComboBoxModel ( costruisciLista ( 1, giorniPerMese[mese] ) ));
   }*/
    /**
     * Campo utilizzato da proprieta' di tipo Bound.
     */
    private PropertyChangeSupport propertyChangeSupport =  new PropertyChangeSupport(this);
    private static String DATA_CAMBIATA="Data Cambiata";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jcmbAnno;
    private javax.swing.JComboBox jcmbGiorno;
    private javax.swing.JComboBox jcmbMese;
    // End of variables declaration//GEN-END:variables
    
   private final byte[] giorniPerMese = {31,28,31,30,31,30,31,31,30,31,30,31};
   String[] MESI = new String[] { "Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre" };
  // private Date dataBean = null;
   
   
   /**
    * Avvia un'anteprima dell'interfaccia grafica.
    */
   public static void main (String[] args) {
    javax.swing.SwingUtilities.invokeLater( new Runnable(){public void run(){  
      String str = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";	// Windows
      //String str = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";		// Grey
      //String str = "javax.swing.plaf.metal.MetalLookAndFeel";   			// Java Metal
      try { javax.swing.UIManager.setLookAndFeel (str); } catch (Exception ex) { System.out.println ("Failed loading Look And Feel:\n"+ex+'\n'); }
      javax.swing.JFrame temp=new javax.swing.JFrame ();
      temp.setLayout (new java.awt.BorderLayout ());
      DataPanel jpnlData = new DataPanel();
      temp.add (jpnlData);
      temp.setSize (200,56);
      temp.setVisible (true);
      System.out.println( jpnlData.getDataSelezionata().toString() );
      System.out.println ("SetData ");
      jpnlData.setData(new Date(70,10,19));
      jpnlData.setData(new Date(70,10,19));
    }});
   }  
   
}


